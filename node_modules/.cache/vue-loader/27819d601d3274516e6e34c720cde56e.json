{"remainingRequest":"/Users/angelwoo/Documents/GitHub/gemstones_catalog/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/angelwoo/Documents/GitHub/gemstones_catalog/src/views/Admin.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/angelwoo/Documents/GitHub/gemstones_catalog/src/views/Admin.vue","mtime":1584453171894},{"path":"/Users/angelwoo/Documents/GitHub/gemstones_catalog/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/angelwoo/Documents/GitHub/gemstones_catalog/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/angelwoo/Documents/GitHub/gemstones_catalog/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/angelwoo/Documents/GitHub/gemstones_catalog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/angelwoo/Documents/GitHub/gemstones_catalog/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmFkbWluICogewogIGJveC1zaXppbmc6IGJvcmRlci1ib3g7Cn0KCiNhZGQtY2FyZCAqIHsKICB0ZXh0LWFsaWduOiBsZWZ0Owp9CgojcHJldmlldy1jYXJkIHsKICB0ZXh0LWFsaWduOiBsZWZ0Owp9CgoucHJldmlldy1jb250ZW50IHsKICBwYWRkaW5nOiAxLjI1cmVtOwp9CgojcHJldmlldy1jYXJkIC5wcmV2aWV3LW5hbWUgewogIHRleHQtYWxpZ246IGNlbnRlcjsKfQoKLmFkbWluIHsKICBtYXJnaW46IDIwcHggYXV0bzsKfQoKLyogbGFiZWwgewogIGRpc3BsYXk6IGJsb2NrOwogIG1hcmdpbi10b3A6IDEwcHg7Cn0gKi8KCi5jb2wtZm9ybS1sYWJlbCwKbGFiZWwgewogIGZvbnQtd2VpZ2h0OiA1MDA7Cn0KCmlucHV0W3R5cGU9InRleHQiXSwKdGV4dGFyZWEgewogIGRpc3BsYXk6IGJsb2NrOwogIHdpZHRoOiAxMDAlOwp9CgprYmQgewogIGJhY2tncm91bmQtY29sb3I6ICNiM2IzYjM7Cn0KCiNwcmV2aWV3LWNhcmQgLmNhcmQtYm9keSB7CiAgcGFkZGluZzogMDsKfQoKLmNhcmQtZm9vdGVyIHsKICB0ZXh0LWFsaWduOiByaWdodDsKfQoKLmFkbWluIGltZyB7CiAgLyogbWF4LWhlaWdodDogMzAlOyAqLwogIHdpZHRoOiAxMDAlOwogIGhlaWdodDogMjUwcHg7CiAgb2JqZWN0LWZpdDogY292ZXI7Cn0K"},{"version":3,"sources":["Admin.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiLA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Admin.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <b-col class=\"admin\">\n    <b-card-group deck>\n      <!-- Add card -->\n      <b-card title=\"Add a gemstone\">\n        <b-card-text id=\"add-card\">\n          <!-- Name -->\n          <b-form-group\n            id=\"gemstone-name\"\n            label-cols-sm=\"12\"\n            label-cols-lg=\"3\"\n            label=\"Name\"\n            label-for=\"input-name\"\n            class=\"pt-lg-3\"\n          >\n            <b-form-input\n              id=\"input-name\"\n              v-model=\"name\"\n              :state=\"nameState\"\n              aria-describedby=\"name-feedback\"\n            ></b-form-input>\n            <b-form-invalid-feedback id=\"name-feedback\">Enter at least 3 letters.</b-form-invalid-feedback>\n          </b-form-group>\n\n          <!-- Sciname -->\n          <b-form-group\n            id=\"gemstone-sciname\"\n            label-cols-sm=\"12\"\n            label-cols-lg=\"3\"\n            description=\"Chemical formula of the gemstone.\"\n            label=\"Scientific name\"\n            label-for=\"input-sciname\"\n          >\n            <b-form-input\n              id=\"input-sciname\"\n              v-model=\"sciname\"\n              :state=\"scinameState\"\n              aria-describedby=\"sciname-feedback\"\n            ></b-form-input>\n            <b-form-invalid-feedback id=\"name-feedback\">This is a required field.</b-form-invalid-feedback>\n          </b-form-group>\n\n          <!-- Description -->\n          <b-row class=\"mt-2\">\n            <b-col md=\"12\" lg=\"3\">\n              <label for=\"textarea-small\">Description</label>\n            </b-col>\n            <b-col md=\"12\" lg=\"9\">\n              <b-form-textarea\n                v-model=\"description\"\n                id=\"textarea-small\"\n                size=\"sm\"\n                placeholder=\"Add description\"\n              ></b-form-textarea>\n            </b-col>\n          </b-row>\n\n          <div class=\"py-3\"></div>\n\n          <!-- Image file -->\n          <b-form-file\n            v-model=\"imagefile\"\n            placeholder=\"Choose a file or drop it here\"\n            drop-placeholder=\"Drop file here...\"\n            type=\"file\"\n            @change=\"previewImage\"\n            accept=\"image/*\"\n          ></b-form-file>\n          <div class=\"py-3\"></div>\n\n          <!-- Symbolism -->\n          <b-form-group\n            id=\"gemstone-symbolism\"\n            label-cols-sm=\"12\"\n            label-cols-lg=\"3\"\n            label=\"Symbolism\"\n            label-for=\"input-symbolism\"\n          >\n            <b-form-tags\n              input-id=\"tags-remove-on-delete\"\n              :input-attrs=\"{ 'aria-describedby': 'tags-remove-on-delete-help' }\"\n              v-model=\"symbolism\"\n              tag-variant=\"light\"\n              separator=\" \"\n              placeholder=\"Enter tags separated by space\"\n              size=\"sm\"\n              remove-on-delete\n              no-add-on-enter\n              class=\"mb-2\"\n            ></b-form-tags>\n            <b-form-text id=\"tags-remove-on-delete-help\">\n              Press\n              <kbd>BACKSPACE</kbd> to remove the last tag entered\n            </b-form-text>\n          </b-form-group>\n        </b-card-text>\n        <template v-slot:footer class=\"card-footer\">\n          <b-button variant=\"danger\">Clear</b-button>\n          <span class=\"px-2\"></span>\n          <b-button variant=\"success\">Confirm</b-button>\n        </template>\n      </b-card>\n\n      <!-- Preview card -->\n      <b-card id=\"preview-card\" header-tag=\"header\">\n        <template v-slot:header>\n          <h6 class=\"mb-0\">Preview</h6>\n        </template>\n        <b-card-text>\n          <div v-if=\"imagefile.length\">\n            <b-img class=\"my-0 mx-0 px-0\" :src=\"imagefile\" fluid-grow alt=\"Fluid-grow image\"></b-img>\n          </div>\n          <div class=\"preview-content\">\n            <div class=\"preview-name\">\n              <h3>{{ name }}</h3>\n            </div>\n            <div v-if=\"sciname.length\">\n              <p>\n                <strong>Scientific name:</strong>\n                {{ sciname }}\n              </p>\n            </div>\n            <div v-if=\"description.length\">\n              <p>Description: {{ description }}</p>\n            </div>\n            <div v-if=\"symbolism.length\">\n              <p>Symbolism: {{ symbolism }}</p>\n            </div>\n          </div>\n        </b-card-text>\n      </b-card>\n    </b-card-group>\n  </b-col>\n</template>\n\n<script>\nexport default {\n  methods: {\n    previewImage: function(event) {\n      // Reference to the DOM input element\n      var input = event.target;\n      // Ensure that you have a file before attempting to read it\n      if (input.files && input.files[0]) {\n        // create a new FileReader to read this image and convert to base64 format\n        var reader = new FileReader();\n        // Define a callback function to run, when FileReader finishes its job\n        reader.onload = e => {\n          // Note: arrow function used here, so that \"this.imageData\" refers to the imageData of Vue component\n          // Read image as base64 and set to imageData\n          this.imagefile = e.target.result;\n        };\n        // Start the reader job - read file as a data url (base64 format)\n        reader.readAsDataURL(input.files[0]);\n      }\n    }\n  },\n  computed: {\n    nameState() {\n      return this.name.length > 2 ? true : false;\n    },\n    scinameState() {\n      return this.sciname.length > 0 ? true : false;\n    }\n  },\n  data() {\n    return {\n      name: \"\",\n      sciname: \"\",\n      description: \"\",\n      imagefile: \"\",\n      symbolism: [\"love\", \"peace\"]\n    };\n  }\n};\n</script>\n\n<style>\n.admin * {\n  box-sizing: border-box;\n}\n\n#add-card * {\n  text-align: left;\n}\n\n#preview-card {\n  text-align: left;\n}\n\n.preview-content {\n  padding: 1.25rem;\n}\n\n#preview-card .preview-name {\n  text-align: center;\n}\n\n.admin {\n  margin: 20px auto;\n}\n\n/* label {\n  display: block;\n  margin-top: 10px;\n} */\n\n.col-form-label,\nlabel {\n  font-weight: 500;\n}\n\ninput[type=\"text\"],\ntextarea {\n  display: block;\n  width: 100%;\n}\n\nkbd {\n  background-color: #b3b3b3;\n}\n\n#preview-card .card-body {\n  padding: 0;\n}\n\n.card-footer {\n  text-align: right;\n}\n\n.admin img {\n  /* max-height: 30%; */\n  width: 100%;\n  height: 250px;\n  object-fit: cover;\n}\n</style>\n"]}]}