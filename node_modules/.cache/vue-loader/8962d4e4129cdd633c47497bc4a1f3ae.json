{"remainingRequest":"/Users/angelwoo/Documents/GitHub/gemstones_catalog/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/angelwoo/Documents/GitHub/gemstones_catalog/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/angelwoo/Documents/GitHub/gemstones_catalog/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/angelwoo/Documents/GitHub/gemstones_catalog/src/views/Admin.vue?vue&type=template&id=54c38a05&","dependencies":[{"path":"/Users/angelwoo/Documents/GitHub/gemstones_catalog/src/views/Admin.vue","mtime":1584524159994},{"path":"/Users/angelwoo/Documents/GitHub/gemstones_catalog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/angelwoo/Documents/GitHub/gemstones_catalog/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/angelwoo/Documents/GitHub/gemstones_catalog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/angelwoo/Documents/GitHub/gemstones_catalog/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgImItY29sIiwKICAgIHsgc3RhdGljQ2xhc3M6ICJhZG1pbiIgfSwKICAgIFsKICAgICAgX2MoCiAgICAgICAgImItY2FyZC1ncm91cCIsCiAgICAgICAgeyBhdHRyczogeyBkZWNrOiAiIiB9IH0sCiAgICAgICAgWwogICAgICAgICAgX2MoCiAgICAgICAgICAgICJiLWNhcmQiLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgYXR0cnM6IHsgaWQ6ICJhZGQtdGl0bGUiLCB0aXRsZTogIkFkZCBhIGdlbXN0b25lIiB9LAogICAgICAgICAgICAgIHNjb3BlZFNsb3RzOiBfdm0uX3UoWwogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBrZXk6ICJmb290ZXIiLAogICAgICAgICAgICAgICAgICBmbjogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFsKICAgICAgICAgICAgICAgICAgICAgIF9jKCJiLWJ1dHRvbiIsIHsgYXR0cnM6IHsgdmFyaWFudDogImRhbmdlciIgfSB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigiQ2xlYXIiKQogICAgICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgICAgICBfYygic3BhbiIsIHsgc3RhdGljQ2xhc3M6ICJweC0xIiB9KSwKICAgICAgICAgICAgICAgICAgICAgIF9jKCJiLWJ1dHRvbiIsIHsgYXR0cnM6IHsgdmFyaWFudDogInN1Y2Nlc3MiIH0gfSwgWwogICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIkNvbmZpcm0iKQogICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIHByb3h5OiB0cnVlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgImItY2FyZC10ZXh0IiwKICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgaWQ6ICJhZGQtY2FyZCIgfSB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAiYi1mb3JtLWdyb3VwIiwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInB0LWxnLTMiLAogICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgaWQ6ICJnZW1zdG9uZS1uYW1lIiwKICAgICAgICAgICAgICAgICAgICAgICAgImxhYmVsLWNvbHMtc20iOiAiMTIiLAogICAgICAgICAgICAgICAgICAgICAgICAibGFiZWwtY29scy1sZyI6ICIzIiwKICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw6ICJOYW1lIiwKICAgICAgICAgICAgICAgICAgICAgICAgImxhYmVsLWZvciI6ICJpbnB1dC1uYW1lIgogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgX2MoImItZm9ybS1pbnB1dCIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICBpZDogImlucHV0LW5hbWUiLAogICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRlOiBfdm0ubmFtZVN0YXRlLAogICAgICAgICAgICAgICAgICAgICAgICAgICJhcmlhLWRlc2NyaWJlZGJ5IjogIm5hbWUtZmVlZGJhY2siCiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIG1vZGVsOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5nZW1zdG9uZS5uYW1lLAogICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbigkJHYpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS4kc2V0KF92bS5nZW1zdG9uZSwgIm5hbWUiLCAkJHYpCiAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAiZ2Vtc3RvbmUubmFtZSIKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgImItZm9ybS1pbnZhbGlkLWZlZWRiYWNrIiwKICAgICAgICAgICAgICAgICAgICAgICAgeyBhdHRyczogeyBpZDogIm5hbWUtZmVlZGJhY2siIH0gfSwKICAgICAgICAgICAgICAgICAgICAgICAgW192bS5fdigiVGhpcyBpcyBhIHJlcXVpcmVkIGZpZWxkLiIpXQogICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAiYi1mb3JtLWdyb3VwIiwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICBpZDogImdlbXN0b25lLXNjaW5hbWUiLAogICAgICAgICAgICAgICAgICAgICAgICAibGFiZWwtY29scy1zbSI6ICIxMiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJsYWJlbC1jb2xzLWxnIjogIjMiLAogICAgICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogIkNoZW1pY2FsIGZvcm11bGEgb2YgdGhlIGdlbXN0b25lLiIsCiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiAiU2NpZW50aWZpYyBuYW1lIiwKICAgICAgICAgICAgICAgICAgICAgICAgImxhYmVsLWZvciI6ICJpbnB1dC1zY2luYW1lIgogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgX2MoImItZm9ybS1pbnB1dCIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICBpZDogImlucHV0LXNjaW5hbWUiLAogICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRlOiBfdm0uc2NpbmFtZVN0YXRlLAogICAgICAgICAgICAgICAgICAgICAgICAgICJhcmlhLWRlc2NyaWJlZGJ5IjogInNjaW5hbWUtZmVlZGJhY2siCiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIG1vZGVsOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5nZW1zdG9uZS5zY2luYW1lLAogICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbigkJHYpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS4kc2V0KF92bS5nZW1zdG9uZSwgInNjaW5hbWUiLCAkJHYpCiAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAiZ2Vtc3RvbmUuc2NpbmFtZSIKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgImItZm9ybS1pbnZhbGlkLWZlZWRiYWNrIiwKICAgICAgICAgICAgICAgICAgICAgICAgeyBhdHRyczogeyBpZDogIm5hbWUtZmVlZGJhY2siIH0gfSwKICAgICAgICAgICAgICAgICAgICAgICAgW192bS5fdigiVGhpcyBpcyBhIHJlcXVpcmVkIGZpZWxkLiIpXQogICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAiYi1yb3ciLAogICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJtdC0yIiB9LAogICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgIF9jKCJiLWNvbCIsIHsgYXR0cnM6IHsgbWQ6ICIxMiIsIGxnOiAiMyIgfSB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJsYWJlbCIsIHsgYXR0cnM6IHsgZm9yOiAidGV4dGFyZWEtc21hbGwiIH0gfSwgWwogICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigiRGVzY3JpcHRpb24iKQogICAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgImItY29sIiwKICAgICAgICAgICAgICAgICAgICAgICAgeyBhdHRyczogeyBtZDogIjEyIiwgbGc6ICI5IiB9IH0sCiAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICBfYygiYi1mb3JtLXRleHRhcmVhIiwgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ6ICJ0ZXh0YXJlYS1zbWFsbCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNpemU6ICJzbSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiAiQWRkIGRlc2NyaXB0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZGVsOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0uZ2Vtc3RvbmUuZGVzY3JpcHRpb24sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbigkJHYpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uJHNldChfdm0uZ2Vtc3RvbmUsICJkZXNjcmlwdGlvbiIsICQkdikKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogImdlbXN0b25lLmRlc2NyaXB0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJweS0zIiB9KSwKICAgICAgICAgICAgICAgICAgX2MoImItZm9ybS1maWxlIiwgewogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcjogIkNob29zZSBhIGZpbGUgb3IgZHJvcCBpdCBoZXJlIiwKICAgICAgICAgICAgICAgICAgICAgICJkcm9wLXBsYWNlaG9sZGVyIjogIkRyb3AgZmlsZSBoZXJlLi4uIiwKICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICJmaWxlIiwKICAgICAgICAgICAgICAgICAgICAgIGFjY2VwdDogImltYWdlLyoiCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBvbjogeyBjaGFuZ2U6IF92bS5wcmV2aWV3SW1hZ2UgfSwKICAgICAgICAgICAgICAgICAgICBtb2RlbDogewogICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5nZW1zdG9uZS5pbWFnZWZpbGUsCiAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24oJCR2KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIF92bS4kc2V0KF92bS5nZW1zdG9uZSwgImltYWdlZmlsZSIsICQkdikKICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAiZ2Vtc3RvbmUuaW1hZ2VmaWxlIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAicHktMyIgfSksCiAgICAgICAgICAgICAgICAgIF9jKCJDb3VudHJ5SW5wdXQiLCB7CiAgICAgICAgICAgICAgICAgICAgb246IHsgImNvdW50cnktbGlzdCI6IF92bS5zZWxlY3RlZENvdW50cmllcyB9CiAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInB5LTMiIH0pLAogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAiYi1mb3JtLWdyb3VwIiwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICBpZDogImdlbXN0b25lLXN5bWJvbGlzbSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJsYWJlbC1jb2xzLXNtIjogIjEyIiwKICAgICAgICAgICAgICAgICAgICAgICAgImxhYmVsLWNvbHMtbGciOiAiMyIsCiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiAiU3ltYm9saXNtIiwKICAgICAgICAgICAgICAgICAgICAgICAgImxhYmVsLWZvciI6ICJpbnB1dC1zeW1ib2xpc20iCiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICBfYygiYi1mb3JtLXRhZ3MiLCB7CiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAibWItMiIsCiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgImlucHV0LWlkIjogInRhZ3MtcmVtb3ZlLW9uLWRlbGV0ZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgImlucHV0LWF0dHJzIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgImFyaWEtZGVzY3JpYmVkYnkiOiAidGFncy1yZW1vdmUtb24tZGVsZXRlLWhlbHAiCiAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAidGFnLXZhcmlhbnQiOiAibGlnaHQiLAogICAgICAgICAgICAgICAgICAgICAgICAgIHNlcGFyYXRvcjogIiAiLAogICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiAiRW50ZXIgdGFncyBzZXBhcmF0ZWQgYnkgc3BhY2UiLAogICAgICAgICAgICAgICAgICAgICAgICAgIHNpemU6ICJzbSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgInJlbW92ZS1vbi1kZWxldGUiOiAiIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAibm8tYWRkLW9uLWVudGVyIjogIiIKICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgbW9kZWw6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLmdlbXN0b25lLnN5bWJvbGlzbSwKICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24oJCR2KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uJHNldChfdm0uZ2Vtc3RvbmUsICJzeW1ib2xpc20iLCAkJHYpCiAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAiZ2Vtc3RvbmUuc3ltYm9saXNtIgogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAiYi1mb3JtLXRleHQiLAogICAgICAgICAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IGlkOiAidGFncy1yZW1vdmUtb24tZGVsZXRlLWhlbHAiIH0gfSwKICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigiIFByZXNzICIpLAogICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJrYmQiLCBbX3ZtLl92KCJCQUNLU1BBQ0UiKV0pLAogICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigiIHRvIHJlbW92ZSB0aGUgbGFzdCB0YWcgZW50ZXJlZCAiKQogICAgICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgKQogICAgICAgICAgICBdLAogICAgICAgICAgICAxCiAgICAgICAgICApLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJiLWNhcmQiLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgYXR0cnM6IHsgaWQ6ICJwcmV2aWV3LWNhcmQiLCAiaGVhZGVyLXRhZyI6ICJoZWFkZXIiIH0sCiAgICAgICAgICAgICAgc2NvcGVkU2xvdHM6IF92bS5fdShbCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIGtleTogImhlYWRlciIsCiAgICAgICAgICAgICAgICAgIGZuOiBmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gWwogICAgICAgICAgICAgICAgICAgICAgX2MoImg2IiwgeyBzdGF0aWNDbGFzczogIm1iLTAiIH0sIFtfdm0uX3YoIlByZXZpZXciKV0pCiAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBwcm94eTogdHJ1ZQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIF0pCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygiYi1jYXJkLXRleHQiLCBbCiAgICAgICAgICAgICAgICBfdm0uZ2Vtc3RvbmUuaW1hZ2VmaWxlLmxlbmd0aAogICAgICAgICAgICAgICAgICA/IF9jKAogICAgICAgICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJiLWltZyIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm15LTAgbXgtMCBweC0wIiwKICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjOiBfdm0uZ2Vtc3RvbmUuaW1hZ2VmaWxlLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgImZsdWlkLWdyb3ciOiAiIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsdDogIkZsdWlkLWdyb3cgaW1hZ2UiCiAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInByZXZpZXctY29udGVudCIgfSwgWwogICAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInByZXZpZXctbmFtZSIgfSwgWwogICAgICAgICAgICAgICAgICAgIF9jKCJoMyIsIFtfdm0uX3YoX3ZtLl9zKF92bS5nZW1zdG9uZS5uYW1lKSldKQogICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgX3ZtLmdlbXN0b25lLnNjaW5hbWUubGVuZ3RoCiAgICAgICAgICAgICAgICAgICAgPyBfYygiZGl2IiwgWwogICAgICAgICAgICAgICAgICAgICAgICBfYygicCIsIFsKICAgICAgICAgICAgICAgICAgICAgICAgICBfYygic3Ryb25nIiwgW192bS5fdigiU2NpZW50aWZpYyBuYW1lOiIpXSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCIgIiArIF92bS5fcyhfdm0uZ2Vtc3RvbmUuc2NpbmFtZSkgKyAiICIpCiAgICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICAgICAgICAgIF92bS5nZW1zdG9uZS5kZXNjcmlwdGlvbi5sZW5ndGgKICAgICAgICAgICAgICAgICAgICA/IF9jKCJkaXYiLCBbCiAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJwIiwgWwogICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJzdHJvbmciLCBbX3ZtLl92KCJEZXNjcmlwdGlvbjoiKV0pLAogICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigiICIgKyBfdm0uX3MoX3ZtLmdlbXN0b25lLmRlc2NyaXB0aW9uKSArICIgIikKICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgICAgICAgICAgX3ZtLmdlbXN0b25lLmNvdW50cmllcy5sZW5ndGgKICAgICAgICAgICAgICAgICAgICA/IF9jKCJkaXYiLCBbCiAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJzcGFuIiwgeyBzdGF0aWNDbGFzczogInByLTIiIH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgICBfYygic3Ryb25nIiwgW192bS5fdigiQ291bnRyaWVzOiIpXSkKICAgICAgICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICJ1bCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl9sKF92bS5nZW1zdG9uZS5jb3VudHJpZXMsIGZ1bmN0aW9uKGNvdW50cnkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfYygibGkiLCB7IGtleTogY291bnRyeS5pZCB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihfdm0uX3MoY291bnRyeS5uYW1lKSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgMAogICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICAgICAgICAgIF92bS5nZW1zdG9uZS5zeW1ib2xpc20ubGVuZ3RoCiAgICAgICAgICAgICAgICAgICAgPyBfYygKICAgICAgICAgICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICBfYygic3BhbiIsIHsgc3RhdGljQ2xhc3M6ICJwci0yIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygic3Ryb25nIiwgW192bS5fdigiU3ltYm9saXNtOiIpXSkKICAgICAgICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX2woX3ZtLmdlbXN0b25lLnN5bWJvbGlzbSwgZnVuY3Rpb24oc3ltKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJiLWJhZGdlIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBrZXk6IHN5bS5pZCwgc3RhdGljQ2xhc3M6ICJwcmV2aWV3LXRhZ3MiIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoX3ZtLl9zKHN5bSkpXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgIDIKICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpCiAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgIF0pCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIDEKICAgICAgICAgICkKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKQogICAgXSwKICAgIDEKICApCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}