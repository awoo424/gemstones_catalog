{"remainingRequest":"/Users/angelwoo/Documents/GitHub/gemstones_catalog/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/angelwoo/Documents/GitHub/gemstones_catalog/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/angelwoo/Documents/GitHub/gemstones_catalog/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/angelwoo/Documents/GitHub/gemstones_catalog/src/views/Admin.vue?vue&type=template&id=54c38a05&","dependencies":[{"path":"/Users/angelwoo/Documents/GitHub/gemstones_catalog/src/views/Admin.vue","mtime":1584531729740},{"path":"/Users/angelwoo/Documents/GitHub/gemstones_catalog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/angelwoo/Documents/GitHub/gemstones_catalog/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/angelwoo/Documents/GitHub/gemstones_catalog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/angelwoo/Documents/GitHub/gemstones_catalog/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}