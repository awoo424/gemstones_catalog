{"remainingRequest":"/Users/angelwoo/Documents/GitHub/gemstones_catalog/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/angelwoo/Documents/GitHub/gemstones_catalog/src/components/CountryInput.vue?vue&type=style&index=0&id=5e22e804&scoped=true&lang=css&","dependencies":[{"path":"/Users/angelwoo/Documents/GitHub/gemstones_catalog/src/components/CountryInput.vue","mtime":1584515863987},{"path":"/Users/angelwoo/Documents/GitHub/gemstones_catalog/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/angelwoo/Documents/GitHub/gemstones_catalog/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/angelwoo/Documents/GitHub/gemstones_catalog/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/angelwoo/Documents/GitHub/gemstones_catalog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/angelwoo/Documents/GitHub/gemstones_catalog/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI2NvdW50cnktaW5wdXQgaW5wdXQgewogIHdpZHRoOiAxMDAlOwp9Cg=="},{"version":3,"sources":["CountryInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA;AACA;AACA","file":"CountryInput.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <label class=\"typo__label\" for=\"ajax\">Async multiselect</label>\n    <multiselect\n      v-model=\"selectedCountries\"\n      id=\"country-input\"\n      label=\"name\"\n      track-by=\"code\"\n      placeholder=\"Type to search\"\n      open-direction=\"bottom\"\n      :options=\"countries\"\n      :multiple=\"true\"\n      :searchable=\"true\"\n      :loading=\"isLoading\"\n      :internal-search=\"false\"\n      :clear-on-select=\"false\"\n      :close-on-select=\"false\"\n      :options-limit=\"300\"\n      :limit=\"3\"\n      :limit-text=\"limitText\"\n      :max-height=\"600\"\n      :show-no-results=\"false\"\n      :hide-selected=\"true\"\n      @search-change=\"asyncFind\"\n    >\n      <template slot=\"tag\" slot-scope=\"{ option, remove }\">\n        <span class=\"custom__tag\">\n          <span>{{ option.name }}</span>\n          <span class=\"custom__remove\" @click=\"remove(option)\">‚ùå</span>\n        </span>\n      </template>\n      <template slot=\"clear\" slot-scope=\"props\">\n        <div\n          class=\"multiselect__clear\"\n          v-if=\"selectedCountries.length\"\n          @mousedown.prevent.stop=\"clearAll(props.search)\"\n        ></div>\n      </template>\n      <span slot=\"noResult\">Oops! No elements found. Consider changing the search query.</span>\n    </multiselect>\n    <pre class=\"language-json\"><code>{{ selectedCountries  }}</code></pre>\n  </div>\n</template>\n\n<script>\nimport Multiselect from \"vue-multiselect\";\nimport { ajaxFindCountry } from \"./countriesApi\";\n\nexport default {\n  components: {\n    Multiselect\n  },\n  data() {\n    return {\n      selectedCountries: [],\n      countries: [],\n      isLoading: false\n    };\n  },\n  methods: {\n    limitText(count) {\n      return `and ${count} other countries`;\n    },\n    asyncFind(query) {\n      this.isLoading = true;\n      ajaxFindCountry(query).then(response => {\n        this.countries = response;\n        this.isLoading = false;\n      });\n    },\n    clearAll() {\n      this.selectedCountries = [];\n    }\n  }\n};\n</script>\n\n<style scoped>\n#country-input input {\n  width: 100%;\n}\n</style>"]}]}